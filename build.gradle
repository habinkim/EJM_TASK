plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.epages.restdocs-api-spec' version '0.16.4'
    id 'org.hidetake.swagger.generator' version '2.19.2'
}

group = 'kr.wooriga'
version = '1.0.0'

java {
    sourceCompatibility = '11'
}

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('generated', file("src/main/generated"))
    snippetsDir = file('build/generated-snippets')
}

def mapstructVersion = '1.5.5.Final'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "com.querydsl:querydsl-core:5.0.0"
    implementation "com.querydsl:querydsl-jpa:5.0.0"
    implementation "com.querydsl:querydsl-apt:5.0.0"
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'
    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'com.epages:restdocs-api-spec-mockmvc:0.16.4'
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    annotationProcessor(
            'org.springframework.boot:spring-boot-configuration-processor',
            "org.mapstruct:mapstruct-processor:${mapstructVersion}",
            'org.projectlombok:lombok-mapstruct-binding:0.2.0',
            'org.projectlombok:lombok',
            "com.querydsl:querydsl-apt:5.0.0:jpa",
            "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
            "javax.annotation:javax.annotation-api"
    )

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor(
            'org.springframework.boot:spring-boot-configuration-processor',
            'org.projectlombok:lombok-mapstruct-binding:0.2.0',
            'org.projectlombok:lombok'
    )

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.testcontainers:testcontainers:1.17.6'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
    testImplementation 'org.testcontainers:mysql:1.17.6'
    testImplementation "org.junit.jupiter:junit-jupiter:5.9.0"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

sourceSets {
    main.java.srcDirs += [generated]
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory(file(generated))
}

compileJava.doFirst {
    delete file(generated)
}

tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn 'openapi3'

}

openapi3 {
    server = "http://localhost:9000"
    title = "Common Code REST API Documentation"
    description = "Spring REST Docs with SwaggerUI."
    version = "1.0.0"
    outputFileNamePrefix = 'common-code-open-api-3.0.1'
    format = 'json'

    outputDirectory = 'src/main/resources/static/docs'
}

postman {
    title = 'Common Code REST API Documentation'
    version = '1.0.0'
    baseUrl = 'http://localhost:9000'
    outputFileNamePrefix = 'common-code-postman-collection'

    outputDirectory = 'src/main/resources/static/docs'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}


asciidoctor {
    dependsOn test
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'

    doFirst {
        delete {
            file("src/main/resources/static/docs")
        }
    }

    doLast {
        copy {
            from(file("build/docs/asciidoc"))
            into(file("src/main/resources/static/docs"))
        }
    }
}

build {
    dependsOn 'asciidoctor'
    dependsOn 'openapi3'
    dependsOn 'postman'
}

bootJar {
    dependsOn 'asciidoctor'
    dependsOn 'openapi3'
    dependsOn 'postman'
}
